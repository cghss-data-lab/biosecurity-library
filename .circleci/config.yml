version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0.3

jobs:
  deploy:
    working_directory: ~/repo

    docker:
      - image: cimg/node:lts

    resource_class: xlarge

    parameters:
      bucket:
        type: string
      distribution:
        type: string

    steps:
      - checkout
      - aws-cli/install

      - restore_cache:
          keys:
            - yarn-deps-{{ checksum "yarn.lock" }}
            - yarn-deps-

      - run:
          name: Yarn Install
          command: yarn install --network-timeout 1000000

      - run:
          name: Gatsby build
          command: yarn build;

      - run:
          name: AWS S3 Sync
          command: aws s3 sync public/ <<parameters.bucket>> --delete

      - save_cache:
          key: yarn-deps-{{ checksum "yarn.lock" }}
          paths:
            - 'node_modules'
            - '.cache'
            - 'public'

      - run:
          name: Run cloudfront invalidation
          command: |
            aws cloudfront create-invalidation \
            --distribution-id <<parameters.distribution>> \
            --paths "/*"

workflows:
  version: 2
  build:
    jobs:
      - deploy:
          bucket: 's3://dev-biosecurity'
          distribution: 'E31RJZOJBZKNK7'
          filters:
            branches:
              only:
                - dev
          context:
            - AWS Credentials
            - Airtable Credentials
      - deploy:
          bucket: 's3://review-biosecurity'
          distribution: 'E1C3POE3SNNT13'
          filters:
            branches:
              only:
                - review
          context:
            - AWS Credentials
            - Airtable Credentials
      - deploy:
          bucket: 's3://staging-biosecurity'
          distribution: 'E2Y1HDO9J5FPR9'
          filters:
            branches:
              only:
                - staging
          context:
            - AWS Credentials
            - Airtable Credentials
      - deploy:
          bucket: 's3://prod-biosecurity'
          distribution: 'E225RTJBB12HS1'
          filters:
            branches:
              only:
                - prod
          context:
            - AWS Credentials
            - Airtable Credentials
